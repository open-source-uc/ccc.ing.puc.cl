---
export interface Props {
	cover: any;
	properties: Record<string, any>;
}

function getCoverImage(cover) {
	if (!cover) return;
	if (cover.type === "file") return cover.file.url;
	if (cover.type === "external") return cover.external.url;
}

// Hack para que las imagenes no cambien
// Probablemente se tenga que añadir cache para el dev server
async function getImageSrc(mightBeSrc: string) {
	if (!mightBeSrc) return;

	const imageResponse = await fetch(mightBeSrc);
	const imageBuffer = await imageResponse.arrayBuffer();
	const imageBase64 = Buffer.from(imageBuffer).toString("base64");
	const imageSrc = `data:image/${mightBeSrc.split(".").pop()};base64,${imageBase64}`;
	return imageSrc;
}

const { cover, properties } = Astro.props;

const title = Object.values(properties)
	.find((p) => p.type === "title")
	.title.map((p) => p.plain_text)
	.join("");

const description = Object.values(properties)
	.find((p) => p.id === "%60QpW") // este id es la columna de descripción
	.rich_text.map((p) => p.plain_text)
	.join("");

const imgSrc = await getImageSrc(getCoverImage(cover));
---

<li class="max-w-xl mx-auto w-full">
	<article class="bg-stone-100 p-3 xs:p-4 rounded-xl h-full">
		{
			imgSrc ? (
				<div class="bg-white p-2 h-48 rounded-lg border-2 border-stone-700 mb-2">
					<img src={imgSrc} alt={title} class="object-contain mx-auto h-full" />
				</div>
			) : null
		}
		<h1 class="font-title text-xl sm:text-2xl mb-2">{title}</h1>
		<p>{description}</p>
	</article>
</li>
